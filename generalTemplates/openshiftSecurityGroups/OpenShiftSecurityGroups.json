{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters": {
    "chosenVPCId": {
      "Type": "String"
    },
    "outboundCIDRRangeIPv4": {
      "Type": "String",
      "Default": "10.0.0.0/16"
    },
    "inboundCIDRRangeIPv4": {
      "Type": "String",
      "Default": "10.0.0.0/16"
    }
  },
  "Resources": {
    "MasterSG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": {
          "Ref": "chosenVPCId"
        },
        "GroupDescription": "OpenShift Master Security Group"
      }
    },
    "NodeSG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": {
          "Ref": "chosenVPCId"
        },
        "GroupDescription": "OpenShift Node Security Group"
      }
    },
    "InfrastructureSG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": {
          "Ref": "chosenVPCId"
        },
        "GroupDescription": "OpenShift Infrastructure Security Group"
      }
    },
    "BastionSG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": {
          "Ref": "chosenVPCId"
        },
        "GroupDescription": "Bastion Security Group"
      }
    },
    "OutboundRuleMasterSG": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "IpProtocol": "tcp",
        "ToPort": 65535,
        "FromPort": 0,
        "CidrIp": {
          "Ref": "outboundCIDRRangeIPv4"
        },
        "GroupId": {
          "Fn::GetAtt": [
            "MasterSG",
            "GroupId"
          ]
        }
      }
    },
    "OutboundRuleNodeSG": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "IpProtocol": "tcp",
        "ToPort": 65535,
        "FromPort": 0,
        "CidrIp": {
          "Ref": "outboundCIDRRangeIPv4"
        },
        "GroupId": {
          "Fn::GetAtt": [
            "NodeSG",
            "GroupId"
          ]
        }
      }
    },
    "OutboundRuleInfraSG": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "IpProtocol": "tcp",
        "ToPort": 65535,
        "FromPort": 0,
        "CidrIp": {
          "Ref": "outboundCIDRRangeIPv4"
        },
        "GroupId": {
          "Fn::GetAtt": [
            "InfrastructureSG",
            "GroupId"
          ]
        }
      }
    },
    "OutboundRuleBastionSG": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "IpProtocol": "tcp",
        "ToPort": 65535,
        "FromPort": 0,
        "CidrIp": {
          "Ref": "outboundCIDRRangeIPv4"
        },
        "GroupId": {
          "Fn::GetAtt": [
            "BastionSG",
            "GroupId"
          ]
        }
      }
    },
    "InboundRuleForMasterAPIAndConsole": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "ToPort": 443,
        "FromPort": 443,
        "CidrIp": {
          "Ref": "inboundCIDRRangeIPv4"
        },
        "GroupId": {
          "Fn::GetAtt": [
            "MasterSG",
            "GroupId"
          ]
        }
      }
    },
    "InboundRuleForNodesInternalNSTCP53": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "ToPort": 53,
        "FromPort": 53,
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "NodeSG",
            "GroupId"
          ]
        },
        "GroupId": {
          "Fn::GetAtt": [
            "MasterSG",
            "GroupId"
          ]
        }
      }
    },
    "InboundRuleForNodesInternalNSUDP53": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "udp",
        "ToPort": 53,
        "FromPort": 53,
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "NodeSG",
            "GroupId"
          ]
        },
        "GroupId": {
          "Fn::GetAtt": [
            "MasterSG",
            "GroupId"
          ]
        }
      }
    },
    "InboundRuleForNodesInternalNSTCP8053": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "ToPort": 8053,
        "FromPort": 8053,
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "NodeSG",
            "GroupId"
          ]
        },
        "GroupId": {
          "Fn::GetAtt": [
            "MasterSG",
            "GroupId"
          ]
        }
      }
    },
    "InboundRuleForNodesInternalNSUDP8053": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "udp",
        "ToPort": 8053,
        "FromPort": 8053,
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "NodeSG",
            "GroupId"
          ]
        },
        "GroupId": {
          "Fn::GetAtt": [
            "MasterSG",
            "GroupId"
          ]
        }
      }
    },
    "InboundRuleForMasterEtcdClientServer": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "ToPort": 2379,
        "FromPort": 2379,
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "MasterSG",
            "GroupId"
          ]
        },
        "GroupId": {
          "Fn::GetAtt": [
            "MasterSG",
            "GroupId"
          ]
        }
      }
    },
    "InboundRuleForMasterEtcdInterServer": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "ToPort": 2380,
        "FromPort": 2380,
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "MasterSG",
            "GroupId"
          ]
        },
        "GroupId": {
          "Fn::GetAtt": [
            "MasterSG",
            "GroupId"
          ]
        }
      }
    },
    "InboundRuleForInfraNodesHTTPS": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "ToPort": 443,
        "FromPort": 443,
        "CidrIp": {
          "Ref": "inboundCIDRRangeIPv4"
        },
        "GroupId": {
          "Fn::GetAtt": [
            "InfrastructureSG",
            "GroupId"
          ]
        }
      }
    },
    "InboundRuleForInfraNodesHTTP": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "ToPort": 80,
        "FromPort": 80,
        "CidrIp": {
          "Ref": "inboundCIDRRangeIPv4"
        },
        "GroupId": {
          "Fn::GetAtt": [
            "InfrastructureSG",
            "GroupId"
          ]
        }
      }
    },
    "InboundRuleForNodesHTTPS": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "ToPort": 443,
        "FromPort": 443,
        "CidrIp": {
          "Ref": "inboundCIDRRangeIPv4"
        },
        "GroupId": {
          "Fn::GetAtt": [
            "NodeSG",
            "GroupId"
          ]
        }
      }
    },
    "InboundRuleForNodesSSH": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "ToPort": 22,
        "FromPort": 22,
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "BastionSG",
            "GroupId"
          ]
        },
        "GroupId": {
          "Fn::GetAtt": [
            "NodeSG",
            "GroupId"
          ]
        }
      }
    },
    "InboundRuleForNodesKubelet": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "ToPort": 10250,
        "FromPort": 10250,
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "NodeSG",
            "GroupId"
          ]
        },
        "GroupId": {
          "Fn::GetAtt": [
            "NodeSG",
            "GroupId"
          ]
        }
      }
    },
    "InboundRuleForNodesSDN": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "udp",
        "ToPort": 4789,
        "FromPort": 4789,
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "NodeSG",
            "GroupId"
          ]
        },
        "GroupId": {
          "Fn::GetAtt": [
            "NodeSG",
            "GroupId"
          ]
        }
      }
    },
    "InboundRuleForBastionSG": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "ToPort": 22,
        "FromPort": 22,
        "CidrIp": {
          "Ref": "inboundCIDRRangeIPv4"
        },
        "GroupId": {
          "Fn::GetAtt": [
            "BastionSG",
            "GroupId"
          ]
        }
      }
    }
  }
}
